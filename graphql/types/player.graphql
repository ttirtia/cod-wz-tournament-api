type Player {
  id: ID!
  name: String!
  activisionId: String!
  rosters: [Roster]
  teams: [Team]
  teamLeaderships: [Team]
  createdAt: Date!
  updatedAt: Date
}

input CreatePlayerInput {
  name: String!
  activisionId: String!
}

input UpdatePlayerInput {
  name: String
  activisionId: String
}

input PlayerFilter {
  id: ID
  name: String
  activisionId: String
}

type Mutation {
  createPlayer(player: CreatePlayerInput!): Player!
  updatePlayer(id: ID!, player: UpdatePlayerInput!): Player!
  deletePlayer(id: ID!): Boolean!
}

type Query {
  findPlayers(filter: PlayerFilter): [Player]
}
